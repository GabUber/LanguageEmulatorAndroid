package edu.poc.languageemulatorandroid;

import java.util.ArrayList;
import java.util.StringTokenizer;

import transicoes.Flecha;
import transicoes.Transicoes;
import tratadorEntrada.TratadorEntrada;
import android.app.Activity;
import android.content.ClipData;
import android.content.res.Resources;
import android.os.Bundle;
import android.view.DragEvent;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnDragListener;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import autogeneretadeanduglylanguagethingsdonottouch.AFLikeTextiveis;
import autogeneretadeanduglylanguagethingsdonottouch.SalvavelTextiveis;
import conversor.Conversor;
import estado.Estado;

public abstract class AFLikeActivity extends Salvavel{
	public class AFLikeMalformedFileException extends MalformedFileException{
		private static final long serialVersionUID = 7424932164654098830L;//autogenerated
		}
	protected RelativeLayout vg; 
	protected LinearLayout menu2[];
	protected LinearLayout menu3[];
	protected LinearLayout menu4[];
	protected LinearLayout menu5[];
	protected LinearLayout menu6;
	protected LinearLayout menu7[];
	protected LinearLayout menu8;
	protected LinearLayout menu9;
	protected LinearLayout menu10;
	protected LinearLayout menu11;
	protected EditText menu4Entrada[];
	protected EditText menu5Entrada[];
	protected EditText menuNEntrada[];
	protected EditText entrada;
	protected EditText entradaEmul;
	protected TextView entradaCons;
	protected TextView saidaEmul;
	boolean pegou = false;
	protected boolean tentouMover=false;
	protected boolean tentouCriar=false;
	protected boolean emulacaoPreparada=false;
	protected Transicoes planoDeFundo;
	protected ArrayList<Estado> estados;
	protected ArrayList<String> nomeEstados;
	protected Estado inicioMove, fimMove;
	protected TratadorEntrada te;
	protected Conversor c;
	protected View aInvizibilizar;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_aflike);
		if (savedInstanceState == null) {
			getSupportFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();
		}
		menuaberto=true;
	}
	public static class PlaceholderFragment extends FragmentoGeral {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(R.layout.fragment_aflike,
					container, false);
			inflaOutrosFragmentos((ViewGroup) rootView, inflater, container);
			return ligaFragmentoGeral((ViewGroup) rootView, inflater, container);
		}

		private void inflaOutrosFragmentos(ViewGroup v,
				LayoutInflater inflater, ViewGroup container) {
			if(telaPequena){
				v.addView(inflater.inflate(R.layout.baixodireita3small, container, false));
				v.addView(inflater.inflate(R.layout.baixoesquerda3small, container, false));
				v.addView(inflater.inflate(R.layout.cimadireita3small, container, false));
				v.addView(inflater.inflate(R.layout.cimaesquerda3small, container, false));
			}
			else{
				v.addView(inflater.inflate(R.layout.baixodireita3, container, false));
				v.addView(inflater.inflate(R.layout.baixoesquerda3, container, false));
				v.addView(inflater.inflate(R.layout.cimadireita3, container, false));
				v.addView(inflater.inflate(R.layout.cimaesquerda3, container, false));
			}
			v.addView(inflater.inflate(R.layout.baixodireita2, container, false));
			v.addView(inflater.inflate(R.layout.baixoesquerda2, container, false));
			v.addView(inflater.inflate(R.layout.cimadireita2, container, false));
			v.addView(inflater.inflate(R.layout.cimaesquerda2, container, false));
			v.addView(inflater.inflate(R.layout.baixodireita4, container, false));
			v.addView(inflater.inflate(R.layout.baixoesquerda4, container, false));
			v.addView(inflater.inflate(R.layout.cimadireita4, container, false));
			v.addView(inflater.inflate(R.layout.cimaesquerda4, container, false));
			v.addView(inflater.inflate(R.layout.baixodireita5, container, false));
			v.addView(inflater.inflate(R.layout.baixoesquerda5, container, false));
			v.addView(inflater.inflate(R.layout.cimadireita5, container, false));
			v.addView(inflater.inflate(R.layout.cimaesquerda5, container, false));
			v.addView(inflater.inflate(R.layout.baixodireita7, container, false));
			v.addView(inflater.inflate(R.layout.baixoesquerda7, container, false));
			v.addView(inflater.inflate(R.layout.cimadireita7, container, false));
			v.addView(inflater.inflate(R.layout.cimaesquerda7, container, false));
		}
	}
	@Override
	@SuppressWarnings("deprecation")
	public void criaEspecifico(){
		te=criaTE();
		c=criaC();
		estados=new ArrayList<Estado>();
		vg=(RelativeLayout)findViewById(R.id.aflikerelativeleiaute);
		entradaEmul=(EditText)findViewById(R.id.aflikeentradasimula);
		entradaCons=(TextView)findViewById(R.id.aflikeentradaconsumida);
		saidaEmul=(TextView)findViewById(R.id.aflikesaida);
		iniciaMenus();
		Resources r = getResources();
		Estado.setaDimensao(dimensaomm, r, this);
		
		planoDeFundo = newPlanodeFundo(vg.getWidth(), vg.getHeight());
		planoDeFundo.setaDimensao(dimensaomm);
		int sdk = android.os.Build.VERSION.SDK_INT;
		if(sdk < android.os.Build.VERSION_CODES.JELLY_BEAN) {
		    vg.setBackgroundDrawable(planoDeFundo);
		    ((ViewGroup)vg.getParent()).setBackgroundDrawable(r.getDrawable(R.drawable.fundo));
		} else {
		    vg.setBackground(planoDeFundo);
		    ((ViewGroup)vg.getParent()).setBackground(r.getDrawable(R.drawable.fundo));
		}
		vg.setOnTouchListener(new View.OnTouchListener() {
	        @Override
	        public boolean onTouch(View v, MotionEvent event) {
	        	if(menuaberto) return false;
	            if (event.getAction() == MotionEvent.ACTION_DOWN){
	            	menuaberto=true;
	            	localizaESeta(menu4, menu4Entrada, event.getX(), event.getY());
	        		inicioMove = newEstado(event.getX(), event.getY(), vg);
	        		vg.addView(inicioMove);
	        		tentouCriar=true;
	        		entrada.setText("");
	                return true;
	            }
	            else return false;
	        }
	    });
		vg.setOnDragListener(new OnDragListener(){
			@Override
			public boolean onDrag(View view, DragEvent dragEvent) {
		        if (dragEvent.getAction() == DragEvent.ACTION_DROP) {
		        	menuaberto=true;
		        	localizaESeta(menu2, menuNEntrada, dragEvent.getX(), dragEvent.getY());
	                inicioMove.move(dragEvent.getX(), dragEvent.getY());
	                tentouMover=true;
		        }
		        return true;
			}
		});
		nomeEstados=new ArrayList<String>();
		inicioMove=null;
		fimMove=null;
		Flecha.setaTamanhoEstado(dimensaomm);
		Flecha.pegaRecurso(r);
		vg.bringToFront();
	}
	@Override
	protected void trazOutroATona(){
		vg.bringToFront();
	}
	protected abstract void apagaEspecificos();
	protected abstract Conversor criaC();
	protected abstract TratadorEntrada criaTE();
	protected abstract Transicoes newPlanodeFundo(int width, int height);
	protected abstract Estado newEstado(float x, float y, RelativeLayout vg);
	protected void localizaESeta(LinearLayout[] menu, EditText[] entradas, float x, float y) {
		if(x>vg.getWidth()/2){
			if(y>vg.getHeight()/2){
				menu[2].setVisibility(View.VISIBLE);
				entrada=entradas[2];
				aInvizibilizar = menu[2];
				menu[2].setX(x-menu[2].getWidth());
				menu[2].setY(y-dimensaomm/2-menu[2].getHeight());
				menu[2].bringToFront();
				menuaberto=true;
			}
			else {
				menu[3].setVisibility(View.VISIBLE);
				entrada=entradas[3];
				aInvizibilizar = menu[3];
				menu[3].setX(x-menu[2].getWidth());
				menu[3].setY(y+dimensaomm/2);
				menu[3].bringToFront();
				menuaberto=true;
			}
		}
		else{
			if(y>vg.getHeight()/2){
				menu[1].setVisibility(View.VISIBLE);
				entrada=entradas[1];
				aInvizibilizar = menu[1];
				menu[1].setX(x);
				menu[1].setY(y-dimensaomm/2-menu[1].getHeight());
				menu[1].bringToFront();
				menuaberto=true;
			}
			else{
				menu[0].setVisibility(View.VISIBLE);
				entrada=entradas[0];
				aInvizibilizar = menu[0];
				menu[0].setX(x);
				menu[0].setY(y+dimensaomm/2);
				menu[0].bringToFront();
				menuaberto=true;
			}
		}
	}
	protected void iniciaMenus() {
		menu2 = new LinearLayout[4];
		menu3 = new LinearLayout[4];
		menu4 = new LinearLayout[4];
		menu5 = new LinearLayout[4];
		menu7 = new LinearLayout[4];
		menu4Entrada = new EditText[4];
		menu5Entrada = new EditText[4];
		menuNEntrada = new EditText[4];
		menu6   =(LinearLayout)findViewById (R.id.aflikeleiaute6);
		menu8   =(LinearLayout)findViewById(R.id.aflikeleiaute8);
		menu9   =(LinearLayout)findViewById(R.id.aflikeleiaute9);
		menu10  =(LinearLayout)findViewById(R.id.aflikeleiaute10);
		menu11  =(LinearLayout)findViewById(R.id.aflikeleiaute11);
		menu2[0]=(LinearLayout)findViewById (R.id.aflikeleiaute2cimaesquerda);
		menu2[1]=(LinearLayout)findViewById (R.id.aflikeleiaute2baixoesquerda);
		menu2[2]=(LinearLayout)findViewById (R.id.aflikeleiaute2cimadireita);
		menu2[3]=(LinearLayout)findViewById (R.id.aflikeleiaute2baixodireita);
		menu3[0]=(LinearLayout)findViewById (R.id.aflikeleiaute3cimaesquerda);
		menu3[1]=(LinearLayout)findViewById (R.id.aflikeleiaute3baixoesquerda);
		menu3[2]=(LinearLayout)findViewById (R.id.aflikeleiaute3cimadireita);
		menu3[3]=(LinearLayout)findViewById (R.id.aflikeleiaute3baixodireita);
		menu4[0]=(LinearLayout)findViewById (R.id.aflikeleiaute4cimaesquerda);
		menu4[1]=(LinearLayout)findViewById (R.id.aflikeleiaute4baixoesquerda);
		menu4[2]=(LinearLayout)findViewById (R.id.aflikeleiaute4cimadireita);
		menu4[3]=(LinearLayout)findViewById (R.id.aflikeleiaute4baixodireita);
		menu5[0]=(LinearLayout)findViewById (R.id.aflikeleiaute5cimaesquerda);
		menu5[1]=(LinearLayout)findViewById (R.id.aflikeleiaute5baixoesquerda);
		menu5[2]=(LinearLayout)findViewById (R.id.aflikeleiaute5cimadireita);
		menu5[3]=(LinearLayout)findViewById (R.id.aflikeleiaute5baixodireita);
		menu7[0]=(LinearLayout)findViewById (R.id.aflikeleiaute7cimaesquerda);
		menu7[1]=(LinearLayout)findViewById (R.id.aflikeleiaute7baixoesquerda);
		menu7[2]=(LinearLayout)findViewById (R.id.aflikeleiaute7cimadireita);
		menu7[3]=(LinearLayout)findViewById (R.id.aflikeleiaute7baixodireita);
		menu4Entrada[0]=(EditText)findViewById (R.id.aflikenomeestadocimaesquerda);
		menu4Entrada[1]=(EditText)findViewById (R.id.aflikenomeestadobaixoesquerda);
		menu4Entrada[2]=(EditText)findViewById (R.id.aflikenomeestadocimadireita);
		menu4Entrada[3]=(EditText)findViewById (R.id.aflikenomeestadobaixodireita);
		menu5Entrada[0]=(EditText)findViewById (R.id.aflikeentradatransicoescimaesquerda);
		menu5Entrada[1]=(EditText)findViewById (R.id.aflikeentradatransicoesbaixoesquerda);
		menu5Entrada[2]=(EditText)findViewById (R.id.aflikeentradatransicoescimadireita);
		menu5Entrada[3]=(EditText)findViewById (R.id.aflikeentradatransicoesbaixodireita);
		menuNEntrada[0]=null;
		menuNEntrada[1]=null;
		menuNEntrada[2]=null;
		menuNEntrada[3]=null;
	}
	public void initEmul(View v){
		if(!menuaberto){
			menu11.setVisibility(View.GONE);
			menuaberto=true;
			menu6.setVisibility(View.VISIBLE);
			aInvizibilizar=menu6;
        	menu6.bringToFront();
			entradaEmul.setText("");
			entradaCons.setText("");
			emulacaoPreparada=false;
			preparaEmulacao();
			emulacaoPreparada=true;
		}
	}
	protected abstract void preparaEmulacao();
	public void cancel(View v){
		aInvizibilizar.setVisibility(View.GONE);
		menuaberto=false;
		if(tentouMover){
			tentouMover=false;
			inicioMove.retorna();
		}
		if(tentouCriar){
			tentouCriar=false;
			inicioMove.setaExiste(false, vg);
			vg.removeView(inicioMove);
		}
	}
	@SuppressWarnings("deprecation")
	public void moveEstado(View v){
		aInvizibilizar.setVisibility(View.GONE);
		menuaberto=false;
		tentouMover=false;
		planoDeFundo.moveuEstado(estados.indexOf(inicioMove), inicioMove.getX(), inicioMove.getY());
		int sdk = android.os.Build.VERSION.SDK_INT;
		if(sdk < android.os.Build.VERSION_CODES.JELLY_BEAN) {
		    vg.setBackgroundDrawable(planoDeFundo);
		} else {
		    vg.setBackground(planoDeFundo);
		}
		vg.invalidate();
	}
	public void criaTrans(View v){
		aInvizibilizar.setVisibility(View.GONE);
		menuaberto=true;
		localizaESeta(menu5, menu5Entrada, fimMove.getX()+dimensaomm/2, fimMove.getY()+dimensaomm/2);
		entrada.setText(planoDeFundo.pegaTexto(estados.indexOf(inicioMove), estados.indexOf(fimMove)));
	}
	protected abstract void deletaEstadoDeFato(String s);
	@SuppressWarnings("deprecation")
	public void estadoDeleta(View v){
		menuaberto=false;
		if(aInvizibilizar!=null) aInvizibilizar.setVisibility(View.GONE);
		inicioMove.setaExiste(false, vg);
		vg.removeView(inicioMove);
		planoDeFundo.removeuEstado(estados.indexOf(inicioMove), vg);
		estados.remove(inicioMove);
		String s = inicioMove.pegaNome();
		nomeEstados.remove(s);
		deletaEstadoDeFato(s);
		inicioMove=null;
		int sdk = android.os.Build.VERSION.SDK_INT;
		if(sdk < android.os.Build.VERSION_CODES.JELLY_BEAN) {
		    vg.setBackgroundDrawable(planoDeFundo);
		} else {
		    vg.setBackground(planoDeFundo);
		}
		vg.invalidate();
	}
	public void inicialToggle(View v){
		menuaberto=false;
		aInvizibilizar.setVisibility(View.GONE);
		toggleInicial(inicioMove);
	}
	protected abstract void toggleInicial(Estado e);
	public void finalToggla(View v){
		menuaberto=false;
		aInvizibilizar.setVisibility(View.GONE);
		toggleFinal(inicioMove);
	}
	protected abstract void toggleFinal(Estado inicioMove2);
	public void criaEstado(View v){
		String s = te.estado(entrada.getText());
		if(s==null||s.equals("")||nomeEstados.contains(s)){
			aInvizibilizar.setVisibility(View.GONE);
			menuaberto=false;
			inicioMove.setaExiste(false, vg);
			vg.removeView(inicioMove);
			return;
		}
		planoDeFundo.adicionouEstado(inicioMove.getX(), inicioMove.getY(), this, vg);
		inicioMove.setaNome(s);
		setaEscutador(inicioMove);
		estados.add(inicioMove);
		nomeEstados.add(s);
		geraEstado(s);
		aInvizibilizar.setVisibility(View.GONE);
		menuaberto=false;
		inicioMove.setVisibility(View.VISIBLE);
		vg.invalidate();
		tentouCriar=false;
	}
	protected void setaEscutador(Estado e) {
		e.setOnTouchListener(new View.OnTouchListener() {
			@Override
		    public boolean onTouch(View view, MotionEvent motionEvent) {
				if (motionEvent.getAction() == MotionEvent.ACTION_DOWN) {
		        	if(menuaberto) return false;
					ClipData clipData = ClipData.newPlainText("", "");
					inicioMove=(Estado) view;
					View.DragShadowBuilder dsb = new View.DragShadowBuilder(view);
					view.startDrag(clipData, dsb, view, 0);
					return true;
				}else return false;
			}
		});
		e.setOnDragListener(new OnDragListener(){
			@Override
			public boolean onDrag(View view, DragEvent dragEvent) {
		        if (dragEvent.getAction() == DragEvent.ACTION_DROP) {
		        	fimMove=(Estado)view;
		        	if(menuaberto) return false;
		        	if(fimMove.equals(inicioMove)){
		        		localizaESeta(menu3, menuNEntrada, fimMove.getX()+dimensaomm/2, fimMove.getY()+dimensaomm/2);
		        		setaTextoInicialFinal();
		        	}
		        	else localizaESeta(menu7, menuNEntrada, fimMove.getX()+dimensaomm/2, fimMove.getY()+dimensaomm/2);
		        }
		        return true;
			}
		});
	}
	public void setaTextoInicialFinal() {
		String s = fimMove.ehInicial() ? lingua.unsetInit:lingua.setInit;
		AFLikeTextiveis.setaTextoInicial(s);
		s=fimMove.ehFinal() ? lingua.unsetfim : lingua.setfim;
		AFLikeTextiveis.setaTextoFinal(s);
	}
	public void criaTransicoes(View v){
		menuaberto=false;
		aInvizibilizar.setVisibility(View.GONE);
		String s = te.transicao(entrada.getText());
		String pfs = planoDeFundo.pegaTexto(estados.indexOf(inicioMove), estados.indexOf(fimMove));
		if(!s.equals("")&&s.equals(pfs)) return;
		else{
			s=te.transicao(s);
			editaTransicoes(s);
		}
	}
	protected abstract void editaTransicoes(String s);
	protected abstract void geraEstado(String string);
	@SuppressWarnings("deprecation")
	public void removeTransicao(View v){
		menuaberto=false;
		aInvizibilizar.setVisibility(View.GONE);
		removeTransicaoDeFato(planoDeFundo.pegaTexto(estados.indexOf(inicioMove), estados.indexOf(fimMove)));
		planoDeFundo.removeuTransicao(estados.indexOf(inicioMove), estados.indexOf(fimMove));
		int sdk = android.os.Build.VERSION.SDK_INT;
		if(sdk < android.os.Build.VERSION_CODES.JELLY_BEAN) {
		    vg.setBackgroundDrawable(planoDeFundo);
		} else {
		    vg.setBackground(planoDeFundo);
		}
		vg.invalidate();
	}
	public void simula(View v){
		String s = entradaEmul.getText().toString();
		entradaEmul.setText("");
		entradaCons.setText(entradaCons.getText().toString()+s);
		simula(s);
	}
	public void retorna(View v){
		menu11.setVisibility(View.VISIBLE);
		menuaberto=false;
		aInvizibilizar.setVisibility(View.GONE);
		if(emulacaoPreparada)paraSimul();
	}
	protected void setaAtivos(ArrayList<Integer> lista){
		for(int i = 0; i < lista.size(); i++){
			estados.get(lista.get(i)).setaAtivo();
		}
	}
	protected void setaTodosEstadosInativos(){
		for (int i = 0; i < estados.size();i++){
			estados.get(i).setaIAtivo();
		}
	}
	protected abstract void paraSimul();
	protected abstract void simula(String s);
	protected abstract void removeTransicaoDeFato(String s);
	@Override
	public void parse(String s) throws  AFLikeMalformedFileException{
		StringTokenizer st = new StringTokenizer(s);
		if(!st.nextToken().equals(pegaTipo())) throw( new AFLikeMalformedFileException());
		double fatorW = w/Integer.parseInt(st.nextToken());
		double fatorH = h/Integer.parseInt(st.nextToken());
		try{trataEstados(st, fatorW, fatorH);}
		catch(Exception ex){throw new AFLikeMalformedFileException();}
		int n = trataIniciais(st.nextToken());
		for (int i = 0; i < n; i++)	toggleInicial(estados.get(Integer.parseInt(st.nextToken())));
		n = trataFinais(st.nextToken());
		for (int i = 0; i < n; i++)	toggleFinal(estados.get(Integer.parseInt(st.nextToken())));
		trataTransicoes(st);
	}
	protected void trataTransicoes(StringTokenizer st) {
		if(!st.hasMoreTokens())return;
		int a1=-1,a2=-1, p1, p2;
		StringBuilder sb = new StringBuilder();
		while(st.hasMoreTokens()){
			p1=a1;
			p2=a2;
			a1=Integer.parseInt(st.nextToken());
			a2=Integer.parseInt(st.nextToken());
			String s1=te.transicao(st.nextToken());
			if( (a1==p1) && (a2==p2) ){
				sb.append(',').append(s1);
			}
			else{
				if(p1!=-1)editaTransicoes(sb.toString());
				fimMove = estados.get(a2);
				inicioMove = estados.get(a1);
				sb=new StringBuilder(s1);
			}
		}
		if(a1!=-1)editaTransicoes(sb.toString());
	}
	protected abstract int trataFinais(String nextToken) throws AFLikeMalformedFileException;
	protected abstract int trataIniciais(String s)throws AFLikeMalformedFileException;
	protected abstract String pegaTipo();
	protected void trataEstados(StringTokenizer st, double fatorW, double fatorH) throws AFLikeMalformedFileException{
		int n = Integer.parseInt(st.nextToken());
		for (int i = 0; i < n;i++){
			String s1=te.estado(st.nextToken());
			if(s1.length()==0) throw new AFLikeMalformedFileException();
			geraEstado(s1);
			float x = (float) ((Float.parseFloat(st.nextToken())) * fatorW);
			float y = (float) ((Float.parseFloat(st.nextToken())) * fatorH);
			inicioMove=newEstado(x+dimensaomm/2, y+dimensaomm/2, vg);
			inicioMove.setVisibility(View.VISIBLE);
			vg.addView(inicioMove);
			planoDeFundo.adicionouEstado(x, y, this, vg);
			inicioMove.setaNome(s1);
			estados.add(inicioMove);
			setaEscutador(inicioMove);
			nomeEstados.add(s1);
			vg.invalidate();
		}
	}
	@Override
	public String toString(View V){
		return c.toString(planoDeFundo, estados, pegaTipo(), w, h);
	}
	protected void setaLingua() {
		AFLikeTextiveis.setaLingua(lingua);
		entradaEmul.setHint(lingua.entrada);
		entradaCons.setHint(lingua.entrada);
		menu5Entrada[0].setHint(lingua.transtext);
		menu5Entrada[1].setHint(lingua.transtext);
		menu5Entrada[2].setHint(lingua.transtext);
		menu5Entrada[3].setHint(lingua.transtext);
		menu4Entrada[0].setHint(lingua.estadonome);
		menu4Entrada[1].setHint(lingua.estadonome);
		menu4Entrada[2].setHint(lingua.estadonome);
		menu4Entrada[3].setHint(lingua.estadonome);
		super.setaLingua();
		SalvavelTextiveis.setaExplicacao(lingua.aflikeexplicacao);
	}
	public abstract void geragre(View v);
	public abstract void geragrd(View v);
	public abstract void geraafd(View v);
	public abstract void geraafn(View v);
	public abstract void geraafnl(View v);
	public void geraaf(View v){
		aInvizibilizar.setVisibility(View.GONE);
		aInvizibilizar=menu9;
		menu9.setVisibility(View.VISIBLE);
		menuaberto=true;
    	menu9.bringToFront();
	}
	public abstract void geraer(View v);
	public void geragr(View v){
		aInvizibilizar.setVisibility(View.GONE);
		aInvizibilizar=menu10;
		menu10.setVisibility(View.VISIBLE);
		menuaberto=true;
    	menu10.bringToFront();
	}
	public abstract void geramealy(View v);
	public abstract void geramoore(View v);
	public abstract void simplifica(View v) ;
	public void menuGerar(View v){
		if(menuaberto) return;
		menuaberto=true;
		menu11.setVisibility(View.GONE);
		aInvizibilizar=menu8;
		menu8.setVisibility(View.VISIBLE);
		menuaberto=true;
    	menu8.bringToFront();
	}
	public void simulaPasso(View V){
		String s = entradaEmul.getText().toString();
		int n = s.indexOf(" ");
		String sub1, sub2;
		if(n==-1){
			sub1=s;
			sub2="";
		}
		else{
			sub1=te.removeEspaco(s.substring(0, n));
			sub2=s.substring(n+1);
			while(sub2.length()>1&&sub2.charAt(0)==' ') sub2=sub2.substring(1); 
		}
		entradaEmul.setText(sub2);
		entradaCons.setText(entradaCons.getText().toString() + " " + sub1);
		saidaEmul.setText(simulaPasso(sub1));
	}
	protected abstract String simulaPasso(String s);
	public void reseta(View v){
		String s = new StringBuilder(entradaCons.getText()).append(' ').append(entradaEmul.getText()).toString();
		entradaEmul.setText(s);
		entradaCons.setText("");
		paraSimul();
		emulacaoPreparada=false;
		preparaEmulacao();
		emulacaoPreparada=true;
	}
	@Override
	public void someInicial(View v){
		super.someInicial(v);
		menu11.setVisibility(View.VISIBLE);
		apagaEspecificos();
	}
	@Override
	protected void carregaTextiveisEspecifico(){
		AFLikeTextiveis.carregaTextiveis((Activity)pegaContexto());
	}
}